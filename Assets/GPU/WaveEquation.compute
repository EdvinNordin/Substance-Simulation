// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel WaveEquation
#pragma kernel AddValue
// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture

RWTexture2D<float> heightTexture;
RWTexture2D<float> velTexture;
RWTexture2D<float> accTexture;

int width;
int height;

int hitPosX;
int hitPosY;

float c;
float dt;

[numthreads(10,10,1)]
void WaveEquation (int2 id : SV_DispatchThreadID)
{   
    
        accTexture[id] = c * c * (heightTexture[int2(id.x - 1, id.y)] + heightTexture[int2(id.x + 1, id.y)] + heightTexture[int2(id.x, id.y + 1)] + 
                        heightTexture[int2(id.x, id.y - 1)] - 4.0f * heightTexture[id]);
        velTexture[id] = velTexture[id] + dt * accTexture[id];
        heightTexture[id] = heightTexture[id] + dt * velTexture[id];
        
}

[numthreads(4, 4, 1)]
void AddValue(int2 id : SV_DispatchThreadID)
{
	heightTexture[int2(hitPosX+id.x-2, hitPosY+id.y-2)] += 1.0f;
}
